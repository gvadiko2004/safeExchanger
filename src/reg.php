<?php
require_once __DIR__ . '/helpers.php';
session_start();

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
$login = isset($_POST['email']) ? trim($_POST['email']) : null;
$password = isset($_POST['password']) ? trim($_POST['password']) : null;
$passwordRepeat = isset($_POST['password-repeat']) ? trim($_POST['password-repeat']) : null;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è email –∏ –ø–∞—Ä–æ–ª–µ–π
if (!$login || !$password || !$passwordRepeat) {
    echo json_encode([
        "success" => false, 
        "message" => "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!", 
        "type" => "error"
    ]);
    exit;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π
if ($password !== $passwordRepeat) {
    echo json_encode([
        "success" => false, 
        "message" => "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!", 
        "type" => "error"
    ]);
    exit;
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
$connect = getDB();
if (!$connect) {
    echo json_encode([
        "success" => false, 
        "message" => "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î!", 
        "type" => "error"
    ]);
    exit;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email
$stmt = $connect->prepare("SELECT * FROM `users` WHERE `email` = ?");
$stmt->bind_param("s", $login);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    echo json_encode([
        "success" => false, 
        "message" => "–≠—Ç–æ—Ç email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!", 
        "type" => "error"
    ]);
} else {
    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    $stmt = $connect->prepare("INSERT INTO `users` (`email`, `password`) VALUES (?, ?)");
    $stmt->bind_param("ss", $login, $hashedPassword);

    if ($stmt->execute()) {
        $_SESSION['email'] = $login;
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
$to = $login;
$subject = "üéâ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è";
$message = "
<html>
<head>
    <style>
        /* –û–±—â–∏–µ —Å—Ç–∏–ª–∏ */
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f7fc;
            color: #333;
            margin: 0;
            padding: 0;
            text-align: center;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 30px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);
        }
        h2 {
            color: rgb(95, 207, 229);
            font-size: 32px;
            margin: 20px 0;
            text-align: center;
        }
        p {
            color: #1f1f1f;
            font-size: 18px;
            margin-bottom: 12px;
            line-height: 1.6;
        }
        .btn {
            display: inline-block;
            padding: 14px 28px;
            background-color: rgb(95, 207, 229);
            color: white;
            text-decoration: none;
            border-radius: 5px;
            font-size: 18px;
            font-weight: 600;
            transition: all 0.3s ease-in-out;
            margin: 20px 0;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        }
        .btn:hover {
            background-color: rgb(95, 207, 229);
        }
        .footer {
            font-size: 14px;
            color: #777;
            margin-top: 30px;
        }
        .footer a {
            color: rgb(95, 207, 229);
            text-decoration: none;
        }

        img {
            max-width: 120px;
            margin: 0 auto;
            display: block;
            width: max-content;
        }

        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
        @media (max-width: 600px) {
            h2 {
                font-size: 20px; /* –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */
            }
            p {
                font-size: 12px; /* –£–º–µ–Ω—å—à–∞–µ–º —à—Ä–∏—Ñ—Ç –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */
            }
            .btn {
                padding: 12px 24px;
                font-size: 14px; /* –£–º–µ–Ω—å—à–∞–µ–º —à—Ä–∏—Ñ—Ç –∫–Ω–æ–ø–∫–∏ */
                font-weight: 600;
                margin: 15px 0 0 0;
            }
            .footer {
                font-size: 12px;
                margin-top: 20px;
            }
        }
    </style>
</head>
<body>
    <div class='container'>
    <img src='https://i.postimg.cc/kGyny36Y/logo.png' alt='EliteRubex'>
    <h2>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π!</h2>
    <p>–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ! –ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å.</p>

    <p style='font-weight: bold;'>–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</p>

    <p>
        <a href='https://eliterubex.com/login.html' class='btn'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –≤—Ö–æ–¥—É</a>
    </p>

    <p class='footer'>–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å <a href='https://eliterubex.com'>–æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –Ω–∞—à—É —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏</a>.</p>
</div>

</body>
</html>";

// –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø–∏—Å—å–º–∞
$headers = "MIME-Version: 1.0" . "\r\n";
$headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
$headers .= "From: eliterubex@eliterubex.com" . "\r\n";

// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
mail($to, $subject, $message, $headers);



        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º JSON-–æ—Ç–≤–µ—Ç
        echo json_encode([
            "success" => true, 
            "message" => "–ù–∞ –≤–∞—à—É –ø–æ—á—Ç—É $login –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!", 
            "type" => "success",
            "redirect" => "#!"
        ]);
        exit;
    } else {
        echo json_encode([
            "success" => false, 
            "message" => "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!", 
            "type" => "error"
        ]);
    }
}
?>
